"use strict";class Carousel{constructor(a){let b=!!(1<arguments.length&&arguments[1]!==void 0)&&arguments[1],c=!!(2<arguments.length&&arguments[2]!==void 0)&&arguments[2],d=!!(3<arguments.length&&arguments[3]!==void 0)&&arguments[3];this.GESTURE_SPEED_THRESHOLD=10,this.autoAdvanceDelay=3e3,this.loop=d,this.playOnce=!this.loop&&c,this.autoAdvance=!!this.playOnce||b,this.durations={NORMAL:.6,SWIPE:.4,REWIND:.3// this will multiplied by the number of screens.
},this.elCarousel=a,this.elInner=null,this.elBtnPrev=null,this.elBtnNext=null,this.elTouch=null,this.elsThumbs=[],this.pos=0,this.x0=0,this.y0=0,this.moveDist=0,this.w=0,this.speedArr=[],this.speed1=0,this.speed0=0,this.movedDist=0,this.numScreens=0,this.intId=0,this.intIdPlayOnce=0,this.arrMoveDiff=[],this.init()}/* =================================================================================================================
      PUBLIC METHODS
   =================================================================================================================*/ /**
   * Sets auto-advance
   * @param bool if true, the Carousel will auto-advance.
   */setAutoAdvance(a){clearInterval(this.intId),!0===a?(this.autoAdvance=!0,this.intId=setInterval(()=>{this.pos++,this.checkPos(),this.move()},this.autoAdvanceDelay)):(clearInterval(this.intId),this.autoAdvance=!1),this.elCarousel.dispatchEvent(new CustomEvent("autoadvancechange",{detail:{isAuto:a}}))}/**
   * Allows to loop Carousel
   * @param bool if true, when pressing 'next' at extreme positions will 'rewind' the Carousel.
   */setLoop(a){this.loop=a,!0===a&&(this.playOnce=!1),this.checkPos()}/**
   * If set to true, the Carousel will return to the 1st slide after it reaches the end.
   * Setting to true will also enable the autoAdvance feature.
   * @param bool
   */setPlayOnce(a){this.playOnce=a,!0===a&&this.setAutoAdvance(!0),this.checkPos()}/**
   * Sets delay in ms between moving to next slide (when autoAdvance is set to true).
   * @param num
   */setAutoAdvanceDelay(a){this.autoAdvanceDelay=isNaN(a)?3e3:a,this.setAutoAdvance(this.autoAdvance)}/* =================================================================================================================
      PRIVATE METHODS
   =================================================================================================================*/ /**
   * @private
   * Initializes this component.
   */init(){this.clickHandler=this.clickHandler.bind(this),this.pDown=this.pDown.bind(this),this.pMove=this.pMove.bind(this),this.pUp=this.pUp.bind(this),this.elInner=this.elCarousel.querySelector(".carousel_movable"),this.elTouch=this.elCarousel.querySelector(".carousel_touch-area"),this.elBtnPrev=this.elCarousel.querySelector(".carousel_buttons > div[data-id=\"btn-prev\"]"),this.elBtnNext=this.elCarousel.querySelector(".carousel_buttons > div[data-id=\"btn-next\"]"),this.numScreens=this.elInner.querySelectorAll(".carousel_screen").length;const a=this.elCarousel.querySelector(".carousel_pos");let b="",c="";const d=this.elCarousel.querySelectorAll(".carousel_screen > img");for(let a=0;a<this.numScreens;a++){b+="<div class=\"carousel_pos_btn\" data-id=\"btn-pos\" data-pos=\"".concat(a,"\"></div>");const e=d[a].getAttribute("src");c+="<div class=\"carousel_thumb\" data-id=\"btn-thumb\" data-pos=\"".concat(a,"\"><img width=\"160\" height=\"160\" src=\"").concat(e,"\" loading=\"lazy\"></div>")}this.elCarousel.querySelector(".carousel_thumb-holder").innerHTML=c,this.elsThumbs=this.elCarousel.querySelectorAll(".carousel_thumb"),a.innerHTML=b,a.addEventListener("click",this.clickHandler),this.elCarousel.querySelector(".carousel_buttons").addEventListener("click",this.clickHandler),this.elCarousel.querySelector(".carousel_thumb-holder").addEventListener("click",this.clickHandler),this.checkPos(),this.elTouch.addEventListener("touchstart",this.pDown),this.elTouch.addEventListener("touchend",this.pUp),this.autoAdvance&&this.setAutoAdvance(!0)}gestureMove(a){let b=0<this.movedDist?-1:0>this.movedDist?1:0;(0===this.pos&&0<this.movedDist||this.pos===this.numScreens-1&&0>this.movedDist)&&(b=0),this.pos+=b,this.checkPos(),this.move(a)}resolveGesture(a){Math.abs(a)<this.GESTURE_SPEED_THRESHOLD?Math.abs(this.movedDist)>=this.w/2?this.gestureMove(0):(this.movedDist=0,this.gestureMove(0)):this.gestureMove(a)}pDown(a){this.removeAuto(),this.arrMoveDiff=[],this.x0=a.touches[0].clientX-this.moveDist,this.y0=a.touches[0].clientY,this.w=this.elInner.getBoundingClientRect().width,this.elTouch.addEventListener("touchmove",this.pMove),this.elInner.classList.remove("transition"),this.elInner.classList.remove("transition-gesture"),this.speedArr=[],this.elInner.style.transitionDuration="0s"}pMove(a){this.moveDist=a.touches[0].clientX-this.x0;const b=this.moveDist+this.w*this.pos,c=100*(b/this.w);let d=100*this.moveDist/this.w;// If a user scrolls down, disable the carousel temporarily ----------------
const e=Math.abs(a.touches[0].clientY-this.y0)-Math.abs(b);return this.arrMoveDiff.push(e),5===this.arrMoveDiff.length&&0<this.arrMoveDiff[4]?void this.elTouch.removeEventListener("touchmove",this.pMove):void(// -------------------------------------------------------------------------
0<this.moveDist&&0===this.pos?d/=3:0>c&&this.pos===this.numScreens-1&&(d-=c/1.5),this.elInner.style.transform="translateX(".concat(d,"%)"),this.speedArr.push(this.speed1),this.speed1=this.moveDist-this.speed0,this.speed0=this.moveDist);// Slow down/restrict movement if at extreme positions ---------------------
}pUp(){this.elTouch.removeEventListener("touchmove",this.pMove);const a=this.speedArr.slice(this.speedArr.length-5);if(0<a.length){this.movedDist=this.moveDist+this.w*this.pos;const b=a.reduce((c,a)=>c+a,0)/a.length;this.resolveGesture(b)}else this.resolveGesture(0)}setTransition(a){0===a?(this.elInner.style.transitionDuration="".concat(this.durations.NORMAL,"s"),this.elInner.style.transitionTimingFunction="ease-in-out"):a===1/0?(this.elInner.style.transitionDuration="".concat(this.numScreens*this.durations.REWIND,"s"),this.elInner.style.transitionTimingFunction="ease-in-out"):(this.elInner.style.transitionDuration="".concat(this.durations.SWIPE,"s"),this.elInner.style.transitionTimingFunction="ease-out")}removeAuto(){clearInterval(this.intId),clearTimeout(this.intIdPlayOnce),this.autoAdvance&&this.setAutoAdvance(!1),this.playOnce=!1}move(){let a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:0;this.w=this.elInner.getBoundingClientRect().width,this.setTransition(a),this.loop?this.pos===this.numScreens?(this.pos=0,this.elInner.style.transitionDuration="".concat(.3*this.numScreens,"s")):-1===this.pos&&(this.pos=this.numScreens-1,this.elInner.style.transitionDuration="".concat(.3*this.numScreens,"s")):this.pos===this.numScreens-1&&(this.autoAdvance&&this.setAutoAdvance(!1),this.playOnce&&setTimeout(()=>{this.pos=0,this.move(1/0),this.playOnce=!1},this.autoAdvanceDelay)),this.checkPos();const b=100*-this.pos;this.moveDist=-this.pos*this.w,this.elInner.style.transform="translateX(".concat(b,"%)")}clickHandler(a){const b=a.target.getAttribute("data-id");b&&("btn-pos"===b||"btn-thumb"===b?this.pos=parseInt(a.target.getAttribute("data-pos"),10):"btn-prev"===b?this.pos--:"btn-next"===b?this.pos++:void 0,this.removeAuto(),this.checkPos(),this.move())}checkPos(){0===this.pos?this.elBtnPrev.classList.add("disabled"):this.elBtnPrev.classList.remove("disabled"),this.pos===this.numScreens-1?this.elBtnNext.classList.add("disabled"):this.elBtnNext.classList.remove("disabled"),this.loop&&(this.elBtnPrev.classList.remove("disabled"),this.elBtnNext.classList.remove("disabled")),this.elCarousel.querySelectorAll("div[data-pos]").forEach(a=>{a.classList.remove("selected")});const a=this.elCarousel.querySelector(".carousel_pos_btn[data-pos='".concat(this.pos,"']"));a&&a.classList.add("selected");const b=this.elCarousel.querySelector(".carousel_thumb[data-pos='".concat(this.pos,"']"));b&&b.classList.add("selected")}}